name: CICD

on:
  push:
    branches: [ "deploy" ]
  pull_request:
    branches: [ "deploy" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3  #github actions의 탬플릿(자동으로 pull받음)
      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          mkdir -p ./src/main/resources
          echo ${{ secrets.APPLICATION }} | base64 --decode > ./src/main/resources/application.yml
          echo ${{ secrets.APPLICATION_PROD }} | base64 --decode > ./src/main/resources/application-prod.yml
          echo ${{ secrets.APPLICATION_LOCAL }} | base64 --decode > ./src/main/resources/application-local.yml
          chmod 777 ./gradlew
          ./gradlew clean build -x test  #jar파일 생성

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/photoground_ceos .
      - name: Push Docker
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/photoground_ceos:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Docker compose  #ec2로 이동해서 ec2에 접속
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.PHOTOGROUND_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |  #실행되고 있는 컨테이너 삭제, 새 이미지 pull 받아서 docker-compose.yml 실행
            cd /home/ubuntu
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/photoground_ceos:latest
            if [ $(sudo docker ps -q --filter "name=photoground-app") ]; then   
              echo "Stopping and removing existing container..."
              sudo docker stop photoground-app
              sudo docker rm photoground-app
            fi
            sudo docker-compose -f docker-compose.yml up -d



   


